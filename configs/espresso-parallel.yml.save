---
testFramework: espresso
# Path to the app's .apk
app: ./SampleApp.apk
 
# Path to the test runner app's .apk
test: ./SampleAppUITests-Runner.apk
 
# Path where XML test reports will be saved.
xmlFolder: ./
 
# Define a list of devices on which the tests should be executed.
devices:
 
# Device 1 example: minimal configuration.
# Only specify a DC (either EU or US).
- datacenter: EU
 
# Device 2 example: Static Allocation.
- datacenter: US
  # Specify a device descriptor for static allocation f.ex. Samsung_Galaxy_S8_real.
  device: Samsung_Galaxy_S8_real
 
# Device 3 example: Dynamic Allocation.
- datacenter: US
  # Specify a device name or regex for dynamic allocation: 'Samsung Galaxy S7', 'Samsung Galaxy.*', etc.
  deviceNameQuery: Samsung Galaxy S7
  # Platform Version for a dynamic device query. f.ex '7' for all Devices
  # with major version 7 and arbitrary minor versions or '7.1.2' for a more
  # specific version.
  platformVersion: 7.1
  # Optional parameters, set to true to enable.
  # phoneOnly: false
  # tabletOnly: false
  # privateDevicesOnly: false
 
# Device 4 example: Running subset of tests.
  # Data center to run tests in (either EU or US).
- datacenter: EU
 
  # Provide a list of test options to esspresso.
  # The key-value pairs supported by espresso are documented here: https://developer.android.com/studio/test/command-line#AMOptionsSyntax
  # In the example below the test would execute all test methods defined in the class com.example.android.TestClassA and
  # the test method 'methodName' defined in com.example.android.TestClassB
  envs:
  - key: class
    value: com.example.android.TestClassA
  - key: class
    value: com.example.android.TestClassB#methodName
